apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao'
apply from : 'maven-release-aar.gradle'
android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    api rootProject.ext.dependencies["multidex"]

//-----------------------SUPPORT---------------------/
    api(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    api(rootProject.ext.dependencies["design"]) {
        exclude module: 'support-annotations'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
    }
    api rootProject.ext.dependencies["annotations"]
    api rootProject.ext.dependencies["recycleadapter"]
    api(rootProject.ext.dependencies["cardview-v7"]) {
        exclude module: 'support-annotations'
    }

    //-----------------------RX---------------------/

    api rootProject.ext.dependencies["rxjava2"]
    api(rootProject.ext.dependencies["rxandroid2"]) {
        exclude module: 'rxjava'
    }
    api(rootProject.ext.dependencies["rxcache2"]) {
        exclude module: 'rxjava'
        exclude module: 'dagger'
    }
    api(rootProject.ext.dependencies["rxlifecycle2"]) {
        exclude module: 'rxjava'
        exclude module: 'jsr305'
    }
    api(rootProject.ext.dependencies["rxlifecycle2-android"]) {
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'rxlifecycle'
    }
    api(rootProject.ext.dependencies["rxcache-jolyglot-gson"]) {
        exclude module: 'gson'
    }
    api rootProject.ext.dependencies['rxerrorhandler2']
    api(rootProject.ext.dependencies["rxpermissions2"]) {
        exclude module: 'rxjava'
        exclude module: 'support-annotations'
    }

    //-----------------------NET---------------------/
    api(rootProject.ext.dependencies["retrofit"]) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    api(rootProject.ext.dependencies["retrofit-converter-gson"]) {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
    api(rootProject.ext.dependencies["retrofit-adapter-rxjava2"]) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["retrofit-url-manager"]

    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["fastjson"]

    //-----------------------IMAGE---------------------/

    api(rootProject.ext.dependencies["glide"]) {
        exclude module: 'support-v4'
    }
    annotationProcessor(rootProject.ext.dependencies["glide-compiler"]) {
        exclude module: 'jsr305'
    }

    //-----------------------CUSTOMVIEW---------------------/

    api rootProject.ext.dependencies["ptr"]
    api rootProject.ext.dependencies["banner"]
    api rootProject.ext.dependencies["vercodeedittext"]
    api rootProject.ext.dependencies["rclayout"]
    api rootProject.ext.dependencies["popmenu"]
    api rootProject.ext.dependencies["photoview"]

    //------------------------AOT-------------------------//

    api rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    api rootProject.ext.dependencies["arouter"]


    //------------------------LOG-------------------------//
    api rootProject.ext.dependencies["logger"]
    api rootProject.ext.dependencies["timber"]


    //------------------------DATA-------------------------//
    api rootProject.ext.dependencies["green-dao"]
    api rootProject.ext.dependencies["eventbus"]

    //------------------------HYBIRD-------------------------//
    api rootProject.ext.dependencies["jsbridge"]
    api rootProject.ext.dependencies["vasonic"]


    //------------------------THIRDPARTY-------------------------//
    api(rootProject.ext.dependencies["crashlytics"]) {
        transitive = true;
    }
    api rootProject.ext.dependencies["sensor"]
    api rootProject.ext.dependencies["map2d"]
    api rootProject.ext.dependencies["location"]
    api rootProject.ext.dependencies["search"]
    api rootProject.ext.dependencies["wx"]



}
